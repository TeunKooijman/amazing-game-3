name: ci

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:

  get-semver:
    runs-on: ubuntu-latest
    outputs: 
      semanticVersion: ${{ steps.get-semantic-version.outputs.group1 }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675
        
    - name: SEMVER - Load
      id: read-properties
      uses: juliangruber/read-file-action@v1
      with:
        path: ./Directory.Build.props
        
    - name: SEMVER - Determine.
      id: get-semantic-version
      uses: actions-ecosystem/action-regex-match@v2
      with:
        text: ${{ steps.read-properties.outputs.content }}
        regex: '<Version>(.*?)</Version>'  
  
  publish-amazing-game-3:
    runs-on: ubuntu-latest
    needs: get-semver
    steps:
    - name: Check out the repo
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675

    - name: DOCKER - Login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
        registry: farmer.jfrog.io
    
    - name: DOCKER - Setup QEMU
      uses: docker/setup-qemu-action@v1

    - name: DOCKER - Setup BuildX
      uses: docker/setup-buildx-action@v1
      
    - name: DOCKER - Build and Push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./dockerfile
        push: true 
        build-args: |
          artifactoryUsername=${{ secrets.ARTIFACTORY_USERNAME }}
          artifactoryPassword=${{ secrets.ARTIFACTORY_PASSWORD }}
        tags: |
          farmer.jfrog.io/core-docker-local/amazing-game-3:${{ needs.get-semver.outputs.semanticVersion }}
          farmer.jfrog.io/core-docker-local/amazing-game-3:latest